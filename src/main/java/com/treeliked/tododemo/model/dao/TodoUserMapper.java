package com.treeliked.tododemo.model.dao;

import com.treeliked.tododemo.model.LoginUser;
import com.treeliked.tododemo.model.dataobject.TodoUser;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import org.springframework.stereotype.Repository;

import java.util.List;

@Mapper
@Repository
public interface TodoUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_user
     *
     * @mbg.generated Tue Dec 25 10:39:07 CST 2018
     */
    @Delete({
            "delete from todo_user",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_user
     *
     * @mbg.generated Tue Dec 25 10:39:07 CST 2018
     */
    @Insert({
            "insert into todo_user (id, nickname, ",
            "email, pwd, last_pwd, ",
            "pwd_len, slat, encrypt, ",
            "gender, birth, avatar, ",
            "slogan, reg_time, last_mod_time, ",
            "state)",
            "values (#{id,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, ",
            "#{email,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{lastPwd,jdbcType=VARCHAR}, ",
            "#{pwdLen,jdbcType=VARCHAR}, #{slat,jdbcType=VARCHAR}, #{encrypt,jdbcType=VARCHAR}, ",
            "#{gender,jdbcType=BIT}, #{birth,jdbcType=DATE}, #{avatar,jdbcType=VARCHAR}, ",
            "#{slogan,jdbcType=VARCHAR}, now(), #{lastModTime,jdbcType=DATE}, ",
            "#{state,jdbcType=BIT})"
    })
    int insert(TodoUser record);


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_user
     *
     * @mbg.generated Tue Dec 25 10:39:07 CST 2018
     */
    @Select({
            "select",
            "id, nickname, email, pwd, last_pwd, pwd_len, slat, encrypt, gender, birth, avatar, ",
            "slogan, reg_time, last_mod_time, state",
            "from todo_user",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "nickname", property = "nickname", jdbcType = JdbcType.VARCHAR),
            @Result(column = "email", property = "email", jdbcType = JdbcType.VARCHAR),
            @Result(column = "pwd", property = "pwd", jdbcType = JdbcType.VARCHAR),
            @Result(column = "last_pwd", property = "lastPwd", jdbcType = JdbcType.VARCHAR),
            @Result(column = "pwd_len", property = "pwdLen", jdbcType = JdbcType.VARCHAR),
            @Result(column = "slat", property = "slat", jdbcType = JdbcType.VARCHAR),
            @Result(column = "encrypt", property = "encrypt", jdbcType = JdbcType.VARCHAR),
            @Result(column = "gender", property = "gender", jdbcType = JdbcType.BIT),
            @Result(column = "birth", property = "birth", jdbcType = JdbcType.DATE),
            @Result(column = "avatar", property = "avatar", jdbcType = JdbcType.VARCHAR),
            @Result(column = "slogan", property = "slogan", jdbcType = JdbcType.VARCHAR),
            @Result(column = "reg_time", property = "regTime", jdbcType = JdbcType.DATE),
            @Result(column = "last_mod_time", property = "lastModTime", jdbcType = JdbcType.DATE),
            @Result(column = "state", property = "state", jdbcType = JdbcType.BIT)
    })
    TodoUser selectByPrimaryKey(String id);

    @Select({
            "select",
            "id, nickname, email, pwd, last_pwd, pwd_len, slat, encrypt, gender, birth, avatar, ",
            "slogan, reg_time, last_mod_time, state",
            "from todo_user",
            "where email = #{email,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "nickname", property = "nickname", jdbcType = JdbcType.VARCHAR),
            @Result(column = "email", property = "email", jdbcType = JdbcType.VARCHAR),
            @Result(column = "pwd", property = "pwd", jdbcType = JdbcType.VARCHAR),
            @Result(column = "last_pwd", property = "lastPwd", jdbcType = JdbcType.VARCHAR),
            @Result(column = "pwd_len", property = "pwdLen", jdbcType = JdbcType.VARCHAR),
            @Result(column = "slat", property = "slat", jdbcType = JdbcType.VARCHAR),
            @Result(column = "encrypt", property = "encrypt", jdbcType = JdbcType.VARCHAR),
            @Result(column = "gender", property = "gender", jdbcType = JdbcType.BIT),
            @Result(column = "birth", property = "birth", jdbcType = JdbcType.DATE),
            @Result(column = "avatar", property = "avatar", jdbcType = JdbcType.VARCHAR),
            @Result(column = "slogan", property = "slogan", jdbcType = JdbcType.VARCHAR),
            @Result(column = "reg_time", property = "regTime", jdbcType = JdbcType.DATE),
            @Result(column = "last_mod_time", property = "lastModTime", jdbcType = JdbcType.DATE),
            @Result(column = "state", property = "state", jdbcType = JdbcType.BIT)
    })
    TodoUser selectByEmail(String email);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_user
     *
     * @mbg.generated Tue Dec 25 10:39:07 CST 2018
     */
    @Select({
            "select",
            "id, nickname, email, pwd, last_pwd, pwd_len, slat, encrypt, gender, birth, avatar, ",
            "slogan, reg_time, last_mod_time, state",
            "from todo_user"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "nickname", property = "nickname", jdbcType = JdbcType.VARCHAR),
            @Result(column = "email", property = "email", jdbcType = JdbcType.VARCHAR),
            @Result(column = "pwd", property = "pwd", jdbcType = JdbcType.VARCHAR),
            @Result(column = "last_pwd", property = "lastPwd", jdbcType = JdbcType.VARCHAR),
            @Result(column = "pwd_len", property = "pwdLen", jdbcType = JdbcType.VARCHAR),
            @Result(column = "slat", property = "slat", jdbcType = JdbcType.VARCHAR),
            @Result(column = "encrypt", property = "encrypt", jdbcType = JdbcType.VARCHAR),
            @Result(column = "gender", property = "gender", jdbcType = JdbcType.BIT),
            @Result(column = "birth", property = "birth", jdbcType = JdbcType.DATE),
            @Result(column = "avatar", property = "avatar", jdbcType = JdbcType.VARCHAR),
            @Result(column = "slogan", property = "slogan", jdbcType = JdbcType.VARCHAR),
            @Result(column = "reg_time", property = "regTime", jdbcType = JdbcType.DATE),
            @Result(column = "last_mod_time", property = "lastModTime", jdbcType = JdbcType.DATE),
            @Result(column = "state", property = "state", jdbcType = JdbcType.BIT)
    })
    List<TodoUser> selectAll();

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table todo_user
     *
     * @mbg.generated Tue Dec 25 10:39:07 CST 2018
     */
    @Update({
            "update todo_user",
            "set nickname = #{nickname,jdbcType=VARCHAR},",
            "email = #{email,jdbcType=VARCHAR},",
            "pwd = #{pwd,jdbcType=VARCHAR},",
            "last_pwd = #{lastPwd,jdbcType=VARCHAR},",
            "pwd_len = #{pwdLen,jdbcType=VARCHAR},",
            "slat = #{slat,jdbcType=VARCHAR},",
            "encrypt = #{encrypt,jdbcType=VARCHAR},",
            "gender = #{gender,jdbcType=BIT},",
            "birth = #{birth,jdbcType=DATE},",
            "avatar = #{avatar,jdbcType=VARCHAR},",
            "slogan = #{slogan,jdbcType=VARCHAR},",
            "reg_time = #{regTime,jdbcType=DATE},",
            "last_mod_time = #{lastModTime,jdbcType=DATE},",
            "state = #{state,jdbcType=BIT}",
            "where id = #{id,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(TodoUser record);

    /**
     * 根据邮箱和密码查询是否存在用户
     *
     * @param email 邮箱
     * @param pwd   用户密码
     * @return 该用户的 公开信息
     */
    @Select({
            "select",
            "id, nickname, email, gender, birth, avatar, ",
            "slogan, reg_time, last_mod_time, state",
            "from todo_user"
    })
    @Results({
            @Result(column = "id", property = "id", jdbcType = JdbcType.VARCHAR, id = true),
            @Result(column = "nickname", property = "nickname", jdbcType = JdbcType.VARCHAR),
            @Result(column = "email", property = "email", jdbcType = JdbcType.VARCHAR),
            @Result(column = "gender", property = "gender", jdbcType = JdbcType.BIT),
            @Result(column = "birth", property = "birth", jdbcType = JdbcType.DATE),
            @Result(column = "avatar", property = "avatar", jdbcType = JdbcType.VARCHAR),
            @Result(column = "slogan", property = "slogan", jdbcType = JdbcType.VARCHAR),
            @Result(column = "reg_time", property = "regTime", jdbcType = JdbcType.DATE),
            @Result(column = "last_mod_time", property = "lastModTime", jdbcType = JdbcType.DATE),
            @Result(column = "state", property = "state", jdbcType = JdbcType.BIT)
    })
    LoginUser selectByEmailAndPwd(String email, String pwd);
}